name: Build and Test PoKeysLib on LinuxCNC

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 */14 * *'  # Run every two weeks

jobs:
  update-pokeyslib:
    runs-on: self-hosted  # Use the self-hosted LinuxCNC runner

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Update submodules
      run: |
        git submodule update --remote --recursive
        sleep 3
        git status
        ls -la pokeyslib

    - name: Ignore untracked build artifacts in submodules
      run: |
        git config --global submodule.recurse true
        git submodule foreach --recursive git config --local status.showUntrackedFiles no
        
    - name: Commit and push updates if needed
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

        # Check if there are changes
        if git status --porcelain | grep .; then
          git add .
          git submodule foreach git add .
          git commit -m "Update PoKeysLib submodule"
          git push
        else
          echo "No changes to commit."
        fi

  build:
    runs-on: self-hosted 
    needs: update-pokeyslib

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt-get update
        xargs -a prerequisites.txt sudo apt-get install -y

    - name: Authenticate GitHub CLI
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

    - name: Build PoKeysLib
      run: |
        dir
        mkdir -p pokeyslib-build
        cd pokeyslib
        sudo make -f Makefile.noqmake install 
      continue-on-error: true

    - name: Save build logs on failure
      if: failure()
      run: |
        if [ -f build.log ]; then
          cat build.log
        fi

    - name: Create GitHub Issue on failure
      if: failure()
      run: |
        if [ -f build.log ]; then
          gh issue create --title "Build Error: ${{ github.sha }}" --body-file build.log --label build-error
        else
          echo "No build log found."
        fi

    - name: Build PoKeysLib for Linux
      run: |
        cd pokeyslib
        mkdir -p build && cd build
        cmake ..
        make

    - name: Ignore untracked build artifacts in submodules
      run: |
        git config --global submodule.recurse true
        git submodule foreach --recursive git config --local status.showUntrackedFiles no

    - name: Clean previous builds
      run: |
        make clean || true
        rm -rf build/
        find . -name '*.o' -delete
        find . -name '*.so' -delete
     

    - name: Build modified PoKeysHalLib
      run: |
        echo "Building PoKeysHalLib from custom Makefile..."
        sudo make -f Makefile.noqmake install
      continue-on-error: true

    - name: Check for multiple transaction definitions
      run: |
        echo "Checking for multiple 'transactions' symbols in object files..."
        nm -o *.o | grep "transactions" | awk '{print $3}' | sort | uniq -d > duplicates.txt

    - name: hal_compile uspace PoKeys_Async
      run: |
        echo "halcompile uspace pokeys_async..."
        # Clean up old artifacts
        find . -name '*.o' -delete
        find . -name '*.ver' -delete
        find . -name '*.so' ! -name 'libPoKeysHal.so' -delete
        sudo halcompile --install --userspace --extra-link-args="-L/usr/lib -lPoKeysHal" experimantal/pokeys_async.c
      continue-on-error: true

    - name: Verify libPoKeysHal.a location
      run: |
        ls -l libPoKeysHal.a
        nm -g libPoKeysHal.a | grep PK_RTCGetAsync

    - name: hal_compile RT PoKeys_Async
      run: |
        echo "halcompile RT pokeys_async..."
        nm -g libPoKeysHal.a | grep PK_RTCGetAsync
        sudo cp libPoKeysHal.a ./experimantal
        sudo halcompile --install --extra-link-args="-Wl,--whole-archive -L. -lPoKeysHal -Wl,--no-whole-archive" experimantal/pokeys_async.c
        nm /usr/lib/linuxcnc/modules/pokeys_async.so | grep PK_RTCGetAsync
      continue-on-error: true

    - name: run uspace PoKeys_Async
      run: |
        echo "run uspace pokeys_async..."
        halrun <<EOF
        loadusr -W pokeys_async
        start
        show pin
        show params
        exit
        EOF
      continue-on-error: true  

    - name: run RT PoKeys_Async
      run: |
        echo "run rt pokeys_async..."
        halrun <<EOF
        loadrt pokeys_async
        start
        show pin
        exit
        EOF
      continue-on-error: true 

    - name: Clean build artifakts
      run: |
        make clean || true
        rm -rf build/
        find . -name '*.o' -delete
        find . -name '*.so' -delete

    - name: Sync repository
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        if git status --porcelain | grep .; then
          git add .
          git submodule foreach git add .
          git commit -m "Sync repository"
          git push
        else
          echo "No changes to sync."
        fi

    - name: Get Git version info
      run: git version

    - name: Add safe directory
      run: git config --global --add safe.directory /home/zarfld/actions-runner2/_work/pokeyslib-fork/pokeyslib-fork

    - name: Get remote.origin.url
      run: git config --local --get remote.origin.url

    - name: Remove refs
      run: git update-ref -d refs/heads/main

    - name: Clean repository
      run: git clean -fdx

    - name: Disable garbage collection
      run: git config --global gc.auto 0
